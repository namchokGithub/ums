<!--
    Namspace: ~/View/ManageUser/Index.cshtml
    Author: Namchok Singhachai
    Description: view for user management
-->

<!-- Use Edit profile model -->
@model UMS.Models.EditAccount

@{
    ViewData["Title"] = "Manage User";                  // Set title
    Layout = "~/Views/Shared/AdminLTE/_Layout.cshtml";  // Set layout
}

<!-- Content -->
<div class="m-auto ml-1">

    <!--Start Card-->
    <div class="card card-info mt-2 w-auto mx-auto">
        <!--Start Card header-->
        <div class="card-header">
            <h3 class="card-title">Manage Users</h3>
        </div>
        <!--End Card header-->
        <!--Start Card body-->
        <div class="card-body">
            <div class="box">
                <div class="box-body">
                    <!--Start Manage user table-->
                    <div class="table-responsive-md">
                        <table id="showAllUserTable" class="table table-hover
                                w-100 table-bordered table-striped">
                            <!--Start Manage user table head-->
                            <thead class="text-center">
                                <tr>
                                    <th>No.</th>
                                    <th>Username</th>
                                    <th>Name</th>
                                    <th>Role</th>
                                    <th>Type Account</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <!--End Manage user table head-->
                            <!--Start Manage user table body-->
                            <tbody>
                                @{ int index = 0; /* For show order in table */ }
                                <!-- ViewData["User"] is List from query -->
                                @if (ViewData["User"] != null)
                                {
                                    @foreach (var item in ViewData["User"] as List<Account>)
                                    {
                                        <tr>
                                            <td><center>@(index += 1)</center></td>
                                            <td>@item.acc_Email</td>
                                            <td>@(item.acc_Firstname + " " + item.acc_Lastname)</td>
                                            <td><center> @((item.acc_Rolename != null) ? item.acc_Rolename : "-") </center></td>
                                            <td><center> @((item.acc_TypeAccoutname != null) ? item.acc_TypeAccoutname : "-") </center></td>
                                            <td class="text-center">
                                                <button class="btn btn-warning text-white" onclick="getUser('@item.acc_Id')"><i class="fa fa-pencil-alt"></i></button>
                                                <button class="btn btn-danger" onclick="deleteUser('@item.acc_Id')"><i class="fa fa-times"></i></button>
                                            </td>
                                        </tr>
                                    }
                                }
                                else // If ViweData["User"] is null
                                {
                                    <tr>
                                        <td colspan="6"><center>No Users.</center></td>
                                    </tr>
                                }
                            </tbody>
                            <!--End Manage user table body-->
                        </table>
                    </div>
                    <!--End Manage user table body-->
                </div>
                <!--End Manage user table body-->
            </div>
            <!--End Manage user table-->
        </div>
        <!--End Card body-->
        <!--Start Form Edit user | Update in controller -->
        <form id="ModalEditUser" method="post" asp-action="editUser" asp-controller="ManageUser">
            <!--Start Modal edit user-->
            <div class="modal fade" id="EditUser">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <!--Start Modal header edit user-->
                        <div class="modal-header bg-warning">
                            <h4 class="modal-title  text-white">EDIT ACCOUNT</h4>
                            <!--Start Button close-->
                            <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                            <!--End Button close-->
                        </div>
                        <!--End Modal header edit user-->
                        <!--Start Modal body edit user-->
                        <div class="modal-body">

                            <!-- Hidden values -->
                            <input type="hidden" asp-for="acc_Id" id="acc_Id" />
                            <input type="hidden" asp-for="acc_User" id="acc_User" />
                            <input type="hidden" asp-for="acc_Email" id="acc_Email" />
                            <input type="hidden" asp-for="acc_IsActive" id="acc_IsActive" />

                            <!--Start Input Edit user-->
                            <div class="form-group">
                                <label asp-for="acc_Firstname">First Name</label> <code>*</code>
                                <input asp-for="acc_Firstname" class="form-control"
                                       id="acc_Firstname" placeholder="First name">
                                <span asp-validation-for="acc_Firstname" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="acc_Lastname">Last Name</label> <code>*</code>
                                <input asp-for="acc_Lastname" class="form-control"
                                       id="acc_Lastname" placeholder="Last name">
                                <span asp-validation-for="acc_Lastname" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="acc_Rolename">Role</label>
                                <select class="form-control" id="acc_RoleId" name="acc_RoleId">
                                    <option value="0" disabled selected>Choose</option>
                                    <option value="1">Admin</option>
                                    <option value="2">User</option>
                                </select>
                            </div>
                            <!--End Input Edit user-->
                        </div>
                        <!--End Modal body-->
                        <!--Start Modal footer-->
                        <div class="modal-footer justify-content-between">
                            <button type="button" class="btn btn-default float-left" onclick="SwalAlert('warning', 'Canceled !')" data-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-success float-right">Save</button>
                        </div>
                        <!--End Modal footer-->
                    </div>
                </div>
            </div>
            <!--End Modal Edit user-->
        </form>
        <!--End Form Edit user-->

    </div>
    <!--End Card-->
</div>
<!-- End content -->
<!-- Script section -->
<script>

    /**
     * Name: deleteUser
     * Parameter: id
     * Author: Namchok Singhachai
     * Description: Set user to inactive
     */
    function deleteUser(id) {
        // SweetAlert confirm delete
        Swal.fire({
            title: 'Do you want to delete?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#28A745',
            cancelButtonColor: '#DC3545',
            confirmButtonText: 'Yes'
        }).then((result) => {
            // Check if click "Yes"
            if (result.value) {
                // Ajax for Inactive user
                $.ajax({
                    url: '@Url.Action("deleteUser", "ManageUser")',
                    data: { id: id },
                    method: "POST",
                    error: function (result) {
                        console.log(result) // Show log of error
                        // Set message status
                        let statusResText = (result.responseText != '') ? ' Text: ' + result.responseText : ''
                        let statusText = (result.statusText != '') ? ' (' + result.statusText + ')' : ''
                        let _text = 'Status : ' + result.status + statusText + statusResText
                        // Alert message error
                        Swal.fire({ icon: 'error', title: 'Error !', text: _text, showConfirmButton: true })
                    } // if error
                }).done(function () {
                    console.log("Inactive user success")
                    alertAndReload()  // for show alert and reload page
                }); // End ajax for inactive user
            } // End if result.value
        })
    } // End deleteUser

    /**
     * Name: alertAndReload
     * Parameter: none
     * Author: Namchok Singhachai
     * Description: for show sweetalert and reload page
     */
    async function alertAndReload() {
        // Function sweetalert
        await Swal.fire({
            icon: 'success',
            title: 'Deleted !',
            showConfirmButton: false,
            timer: 1200
        }) // End sweetalert
        await location.reload(); // Reload pages
    } // End alertAndReload

    /**
     * Name: getUser
     * Parameter: id
     * Author: Namchok Singhachai
     * Description: Get active user by ID (Ajax)
     */
    function getUser(id) {
        // Ajax for get user by id and set to form
        $.ajax({
            url: "@Url.Action("getUser", "ManageUser")",
            data: { id: id },
            type: "POST",
            dataType: "JSON",
            success: function (result) {
                // Check if id is null will return error
                if (result['condition'] != "error") {
                    // Set data to form ]
                    $('#acc_Id').val(result.acc_Id);
                    $('#acc_User').val(result.acc_User);
                    $('#acc_Email').val(result.acc_Email);
                    $('#acc_IsActive').val(result.acc_IsActive);
                    $('#acc_Firstname').val(result.acc_Firstname);
                    $('#acc_Lastname').val(result.acc_Lastname);

                    if (result.acc_Rolename === 'Admin') {
                        $('#acc_RoleId').val(1);
                    } else if (result.acc_Rolename === 'User') {
                        $('#acc_RoleId').val(2);
                    } else {
                        $('#acc_RoleId').val(0);
                    } // end check role from select

                    // Show modal
                    $('#EditUser').modal();
                    console.log('query success ~');
                } else {
                    // Check is has exception
                    eval(result['messages']) // Excute js
                    console.log('Query Error!!!');
                } // End if result is not error
            },
            error: function (result) {
                console.log(result) // show log of error
                // Set message status
                let statusResText = (result.responseText != '') ? ' Text: ' + result.responseText : ''
                let statusText = (result.statusText != '') ? ' (' + result.statusText + ')' : ''
                let _text = 'Status : ' + result.status + statusText + statusResText
                // Alert message error
                Swal.fire({ icon: 'error', title: 'Error !', text: _text, showConfirmButton: true })
            } // End error
        }) // End ajax for get user by id and set to form
    } // End getUser

    // Check is update user success
    @if (TempData["UpdateResult"] != null) { @Html.Raw(TempData["UpdateResult"]) /* Swal funciton */ }
    // Check is has exception
    @if (TempData["nullException"] != null) { @Html.Raw(TempData["nullException"]) /* Swal funciton */ }
</script>